cmake_minimum_required(VERSION 2.6)
project(OCELOT)

include_directories("${PROJECT_BINARY_DIR}")

FIND_PATH(EV_INCLUDE_PATH ev++.h /usr/include)

IF(EV_INCLUDE_PATH)
  SET(EV_INCLUDE_DIR ${EV_INCLUDE_PATH})
ENDIF(EV_INCLUDE_PATH)

FIND_LIBRARY(EV_LIBRARIES ev)
IF (EV_LIBRARIES)
  MESSAGE(INFO "found")
  MESSAGE(${EV_LIBRARIES})
ENDIF(EV_LIBRARIES)

FIND_PATH(MYSQL_INCLUDE_PATH mysql.h /usr/include/mysql/)
IF(MYSQL_INCLUDE_PATH AND MYSQLPP_INCLUDE_PATH)
  SET(MYSQLPP_INCLUDE_DIR
    ${MYSQLPP_INCLUDE_PATH}
    ${MYSQL_INCLUDE_PATH}
  )
ENDIF(MYSQL_INCLUDE_PATH AND MYSQLPP_INCLUDE_PATH)

FIND_LIBRARY(MYSQLPP_LIBRARIES mysqlpp)

IF (MYSQLPP_INCLUDE_DIR AND MYSQLPP_LIBRARIES)
   SET(MYSQLPP_FOUND TRUE)
ELSE (MYSQLPP_INCLUDE_DIR AND MYSQLPP_LIBRARIES)
   SET(MYSQLPP_FOUND FALSE)
ENDIF (MYSQLPP_INCLUDE_DIR AND MYSQLPP_LIBRARIES)

IF(MYSQLPP_FIND_REQUIRED)
  IF(MYSQLPP_FOUND)
  ELSE(MYSQLPP_FOUND)
    MESSAGE(FATAL_ERROR "Could not find mysqlpp")
  ENDIF(MYSQLPP_FOUND)
ENDIF(MYSQLPP_FIND_REQUIRED)


MARK_AS_ADVANCED(MYSQLPP_LIBRARIES MYSQLPP_INCLUDE_DIR)


find_package(Boost 1.37.0 REQUIRED COMPONENTS system iostreams)
if(Boost_FOUND)
  include_directories(${Boost_INCLUDE_DIRS})
endif()

include_directories(${MYSQL_INCLUDE_PATH} ${MYSQLPP_INCLUDE_PATH} ${EV_INCLUDE_PATH})

set(CMAKE_CXX_FLAGS "-g -Wall -std=c++11 -Wfatal-errors -pthread -fomit-frame-pointer -fno-ident")

add_executable(ocelot ocelot.cpp)

TARGET_LINK_LIBRARIES(ocelot ${Boost_LIBRARIES} ${MYSQLPP_LIBRARIES} ${MYSQL_LIBRARIES} mysqlclient ${EV_LIBRARIES})

